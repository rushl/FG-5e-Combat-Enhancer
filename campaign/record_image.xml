<?xml version="1.0" encoding="iso-8859-1"?>

<!-- Please see the COPYRIGHT.txt file included with this distribution for attribution and copyright information. -->

<root>

	<!-- Floating image window -->
	<windowclass name="imagewindow" merge="join">				
		<script file="campaign/scripts/updated_imagewindow.lua" />							
		<sheetdata>			
			<image_record name="image">
				<default snap="on" drawingsize="200,200" />
				<script file="campaign/scripts/image.lua" />									
			</image_record>
			<image_record name="features_image" insertbefore="scroller_image">
				<default snap="on" drawingsize="200,200" />
				<script file="campaign/scripts/image.lua" />
			</image_record>
			<image_record name="play_image" insertbefore="scroller_image">
				<default snap="on" drawingsize="200,200" />
				<script file="campaign/scripts/image.lua" />
			</image_record>
		</sheetdata>		
	</windowclass>
	
	<!-- Background image window panel -->
	<windowclass name="imagepanelwindow" merge="join">
<!--		<sharable shareas="imagewindow" />
		<frame>imagepanel</frame>-->		
		<script file="campaign/scripts/updated_imagewindow.lua" />							
		<sheetdata>
			<sub_record_toolbar_imagepanel name="toolbar" />
			
			<imagepanel_record name="image">
				<script file="campaign/scripts/image.lua" />
			</imagepanel_record>
			<imagepanel_record name="features_image" insertbefore="scroller_image">
				<script file="campaign/scripts/image.lua" />
			</imagepanel_record>
			<imagepanel_record name="play_image" insertbefore="scroller_image">
				<script file="campaign/scripts/image.lua" />
			</imagepanel_record>			
<!--			<scrollercontrol name="scroller_image">
				<anchored to="image" position="insidebottomright" offset="3,3" width="40" height="38" />
				<target>image</target>
				<button normal="button_scrollerpan" pressed="button_scrollerpan_down" zoom="button_zoomer" zoompressed="button_zoomer_down" />
			</scrollercontrol>
			<imagepaneldata_record name="imagedata" source="image" />-->
		</sheetdata>
	</windowclass>	






	<!-- Floating image window toolbar -->
	<windowclass name="imagewindow_toolbar" merge="join">
		<script>
			function onInit()
				update()
			end
			function getImage()
				if User.isHost() then
					local activelayer = parentcontrol.window.layerEnabled()
					if activelayer == "play_image" then
						return parentcontrol.window.play_image
					elseif activelayer == "image" then
						return parentcontrol.window.image
					elseif activelayer == "features_image" then
						return parentcontrol.window.features_image					
					end			
				else
					return parentcontrol.window.play_image
				end
			end
			function update()
				super.update()
				if User.isHost() then								
					h4.setVisible(true)	
					toggle_layers_quick.setVisible(true)				
					toggle_layers.setVisible(true)
					local bShowLayersToggle = false
					if toggle_layers.getValue() &gt; 0 then
						bShowLayersToggle = true
					end
					local bShowLayersToolbar = false
					bShowLayersToolbar = bShowLayersToggle
					toolbar_layers.setVisibility(bShowLayersToolbar)									
				end
			
				local activelayer = "play_image"
				local bHasTokens = false;
				
				if User.isHost() then
					bHasTokens = getImage().hasTokens();
					activelayer = parentcontrol.window.layerEnabled()
					toolbar_clear_saves.setVisible(bHasTokens);	
				else
					bHasTokens = parentcontrol.window.play_image.hasTokens();
				end
			
				toggle_select.setVisible(bHasTokens);
				
				if activelayer == "play_image" then
					h3.setVisible(bHasTokens);
					toggle_targetselect.setVisible(bHasTokens);
					toolbar_targeting.setVisibility(bHasTokens);					
				else
					h3.setVisible(false);
					toggle_targetselect.setVisible(false);
					toolbar_targeting.setVisibility(false);
				end								
			end
		</script>
		<sheetdata>

			<!-- Drawing section (mask/draw/erease) -->
			<toolbar_30 name="toolbar_draw" merge="join">
				<script>
					function onValueChanged()
						local activelayer = window.parentcontrol.window.layerEnabled()
						local sTool = ""
						if activelayer == "play_image" then
							sTool = window.getImage().getCursorMode()
						elseif activelayer == "image" then
							sTool = window.parentcontrol.window.image.getCursorMode()
						end
						if sTool == "unmask" and activelayer == "image" then
							setActive("unmask")
						elseif sTool == "draw" and activelayer == "play_image" then
							setActive("paint")
						elseif sTool == "erase" and activelayer == "play_image" then
							setActive("erase")
						else
							setActive("")
						end
					end
					function onButtonPress(id)
						local activelayer = window.parentcontrol.window.layerEnabled()
						local image = ""
						if activelayer == "play_image" then
							image = window.getImage()
						elseif activelayer == "image" then
							image = window.parentcontrol.window.image
						end
						if id == "paint" and activelayer == "play_image" then
							if image.getCursorMode() ~= "draw" then
								image.setCursorMode("draw")
							else
								image.setCursorMode("")
							end
						elseif id == "erase" and activelayer == "play_image" then
							if image.getCursorMode() ~= "erase" then
								image.setCursorMode("erase")
							else
								image.setCursorMode("")
							end
						elseif id == "unmask" and activelayer == "image" then
							if image.getCursorMode() ~= "unmask" then
								image.setMaskEnabled(true)
								image.setCursorMode("unmask")
							else
								window.parentcontrol.window.showLayer("play")	
								window.toolbar_layers.setActive('layer_play');							
								image.setCursorMode("")
							end						
						elseif id == "unmask" and activelayer ~= "image" then
							window.parentcontrol.window.showLayer("background")
							window.toolbar_layers.setActive('layer_background');
							image = window.parentcontrol.window.image									 
							if image.getCursorMode() ~= "unmask" then
								image.setMaskEnabled(true)
								image.setCursorMode("unmask")
							else
								window.parentcontrol.window.showLayer("play")
								window.toolbar_layers.setActive('layer_play'); 
								image.setCursorMode("")
							end

						end
						
						onValueChanged()
					end
				</script>
			</toolbar_30>

			<!-- Fog of War section -->
			<!-- 
			<buttoncontrol name="toolbar_fow" insertbefore="h4">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible/>
				<state icon="tool_fow_30" />
				<frame name="toolbar_30" />
				<tooltip textres="tooltip_fow_toolbar" />
				<script>
					function onButtonPress()
						Debug.console("pressed fow button!"); 
						FOW.fow();
					end
					
					function updateDisplay()
					end
				</script>
			</buttoncontrol>
			-->



			<!-- Layers section -->
			<genericcontrol name="h4" insertbefore="h2">
				<anchored to="toolbar_anchor" width="5" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible />
			</genericcontrol>
			<!-- Toggle play and background layer button -->
			<buttoncontrol name="toggle_layers_quick" insertbefore="h2">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<state icon="tool_layers_toggle_30" color="60A0A0A0" />
				<state icon="tool_layers_toggle_30" />
				<frame name="toolbar_30" />
				<tooltip textres="tooltip_toggle_layers_quick" />
				<invisible />
				<script>
					function onButtonPress()
						local activelayer = window.parentcontrol.window.layerEnabled();
						image = window.getImage()
						if activelayer == "play_image" then							
							window.toolbar_layers.setActive('layer_background');
							window.parentcontrol.window.showLayer("background")
							image.setCursorMode("")
						else
							window.toolbar_layers.setActive('layer_play');
							window.parentcontrol.window.showLayer("play")
							image.setCursorMode("")
						end
					end
				</script>
			</buttoncontrol>			
			<buttoncontrol name="toggle_layers" insertbefore="h2">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<state icon="tool_layers_30" color="60A0A0A0" />
				<state icon="tool_layers_30" />
				<frame name="toolbar_30" />
				<tooltip textres="image_tooltip_toolbargrid" />
				<invisible />
				<script>
					local showlayerbar = 0
					function getValue()
						return showlayerbar
					end
					function onButtonPress()
						if showlayerbar > 0 then
							showlayerbar = 0
						else
							showlayerbar = 1
						end
						window.update();
						window.toolbar_draw.onValueChanged()
					end
				</script>
			</buttoncontrol>
			<toolbar_30 name="toolbar_layers" insertbefore="h2">
				<anchored to="toolbar_anchor">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible/>
				<button>
					<id>layer_background</id>
					<icon>tool_layers_background_30</icon>
					<tooltip>Background Layer</tooltip>
				</button>
				<button>
					<id>layer_features</id>
					<icon>tool_layers_features_30</icon>
					<tooltip>Features Layer</tooltip>
				</button>
				<button>
					<id>layer_play</id>
					<icon>tool_layers_play_30</icon>
					<tooltip>Play Layer</tooltip>
				</button>
				<toggle />
				<invisible />
				<script>
					function onInit()
						super.onInit()
						setActive("layer_play")
					end
					function onButtonPress(sID)
						if (sID == "layer_background") then
							setActive("layer_background")
							window.parentcontrol.window.showLayer("background")
						elseif (sID == "layer_features") then
							setActive("layer_features")
							window.parentcontrol.window.showLayer("features")
						elseif (sID == "layer_play") then
							setActive("layer_play")
							window.parentcontrol.window.showLayer("play")
						end
						window.toolbar_draw.onValueChanged()
					end
				</script>
			</toolbar_30>

			<!-- Clear saves button on toolbar -->
			<buttoncontrol name="toolbar_clear_saves">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible/>
				<state icon="tool_clear_saves_30" />
				<frame name="toolbar_30" />
				<tooltip textres="tooltip_saves_clear_toolbar" />
				<script>
					function onButtonPress()
						Debug.console("pressed save clear button!"); 
						local image = window.parentcontrol.window.play_image;
						local listTokens = image.getTokens(); 
						for _,token in pairs(listTokens) do
							local nodeCT = CombatManager.getCTFromToken(token);
							if nodeCT then
								TokenManager2.setSaveOverlay(nodeCT,0); 	
							end
						end
					end
					
					function updateDisplay()
					end
				</script>
			</buttoncontrol>

		</sheetdata>
	</windowclass>








	<!-- Background image window panel toolbar -->
	<windowclass name="imagepanelwindow_toolbar_v339">
		<frame>toolbar_back</frame>
		<script>
			function onInit()
				update();
			end
			
			function getImage()				
				if User.isHost() then
					local activelayer = parentcontrol.window.layerEnabled()
					if activelayer == "play_image" then
						return parentcontrol.window.play_image
					elseif activelayer == "image" then
						return parentcontrol.window.image
					elseif activelayer == "features_image" then
						return parentcontrol.window.features_image					
					end			
				else
					return parentcontrol.window.play_image
				end
			end
			
			function update()
				local bHasTokens = getImage().hasTokens();

				if User.isHost() then
					toolbar_draw.setVisibility(true);
					h2.setVisible(true);
					
					toggle_layers_quick.setVisible(true)	
					toggle_layers.setVisible(true)
					local bShowLayersToggle = false
					if toggle_layers.getValue() &gt; 0 then
						bShowLayersToggle = true
					end
					local bShowLayersToolbar = false
					bShowLayersToolbar = bShowLayersToggle
					toolbar_layers.setVisibility(bShowLayersToolbar)	

					local bShowGridToggle = getImage().hasGrid();
					toggle_grid.setVisible(bShowGridToggle);
					
					local bShowGridToolbar = false;
					if toggle_grid.getValue() > 0 then
						bShowGridToolbar = bShowGridToggle;
					end
					toolbar_grid.setVisibility(bShowGridToolbar);

					h1.setVisible(true);
				end

				local activelayer = "play_image";

				if User.isHost() then
					activelayer = parentcontrol.window.layerEnabled();
					toolbar_clear_saves.setVisible(bHasTokens);	
				end

				toggle_select.setVisible(bHasTokens);
				
				if activelayer == "play_image" then
					h3.setVisible(bHasTokens);
					toggle_targetselect.setVisible(bHasTokens);
					toolbar_targeting.setVisibility(bHasTokens);					
				else
					h3.setVisible(false);
					toggle_targetselect.setVisible(false);
					toolbar_targeting.setVisibility(false);
				end	
			end
		</script>
		<sheetdata>
			<genericcontrol name="toolbar_anchor">
				<anchored position="insidetopright" offset="100,0" width="0" height="34" />
				<disabled />
			</genericcontrol>
			
			<toolbar_30 name="toolbar_targeting">
				<anchored to="toolbar_anchor">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<invisible/>
				<button>
					<id>clear</id>
					<icon>tool_target_clear_30</icon>
					<tooltipres>image_tooltip_toolbartargetclear</tooltipres>
				</button>
				<button>
					<id>friend</id>
					<icon>tool_target_allies_30</icon>
					<tooltipres>image_tooltip_toolbartargetfriend</tooltipres>
				</button>
				<button>
					<id>foe</id>
					<icon>tool_target_enemies_30</icon>
					<tooltipres>image_tooltip_toolbartargetfoe</tooltipres>
				</button>
				<script>
					function onButtonPress(sID)
						if sID == "clear" then
							TargetingManager.clearTargets(window.getImage());
						elseif sID == "friend" then
							TargetingManager.setFactionTargets(window.getImage());
						elseif sID == "foe" then
							TargetingManager.setFactionTargets(window.getImage(), true);
						end
					end
				</script>
			</toolbar_30>
			<buttoncontrol name="toggle_targetselect">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<state icon="tool_target_select_30" />
				<frame name="toolbar_30" />
				<tooltip textres="image_tooltip_toolbartarget" />
				<script>
					function onButtonPress()
						local image = window.getImage();
						
						if image.getCursorMode() == "target" then
							image.setCursorMode();
						else
							image.setCursorMode("target");
						end
					end
					
					function updateDisplay()
						if window.getImage().getCursorMode() == "target" then
							setColor("ffffffff");
						else
							setColor("60a0a0a0");
						end
					end
				</script>
			</buttoncontrol>
			<genericcontrol name="h3">
				<anchored to="toolbar_anchor" width="5" height="34">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<invisible />
			</genericcontrol>

			<buttoncontrol name="toggle_select">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<state icon="tool_select_30" />
				<frame name="toolbar_30" />
				<tooltip textres="image_tooltip_toolbarselect" />
				<script>
					function onButtonPress()
						local image = window.getImage();
						
						if image.getCursorMode() == "select" then
							image.setCursorMode();
						else
							image.setCursorMode("select");
						end

					end
					
					function updateDisplay()
						if window.getImage().getCursorMode() == "select" then
							setColor("ffffffff");
						else
							setColor("60a0a0a0");
						end
					end
				</script>
			</buttoncontrol>
			<genericcontrol name="h1">
				<anchored to="toolbar_anchor" width="5" height="34">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<invisible />
			</genericcontrol>

			<toolbar_30 name="toolbar_grid">
				<anchored to="toolbar_anchor">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<invisible/>
				<button>
					<id>gridleft</id>
					<icon>tool_left_30</icon>
					<tooltipres>image_tooltip_toolbargridleft</tooltipres>
				</button>
				<button>
					<id>gridright</id>
					<icon>tool_right_30</icon>
					<tooltipres>image_tooltip_toolbargridright</tooltipres>
				</button>
				<button>
					<id>gridup</id>
					<icon>tool_up_30</icon>
					<tooltipres>image_tooltip_toolbargridup</tooltipres>
				</button>
				<button>
					<id>griddown</id>
					<icon>tool_down_30</icon>
					<tooltipres>image_tooltip_toolbargriddown</tooltipres>
				</button>
				<button>
					<id>gridplus</id>
					<icon>tool_plus_30</icon>
					<tooltipres>image_tooltip_toolbargridplus</tooltipres>
				</button>
				<button>
					<id>gridminus</id>
					<icon>tool_minus_30</icon>
					<tooltipres>image_tooltip_toolbargridminus</tooltipres>
				</button>
				<script>
					function onButtonPress(sID)
						local image = window.getImage();
						
						local gridsize = image.getGridSize();
						local ox, oy = image.getGridOffset();
						
						if (sID == "gridleft") then
							ox = ox - 1;
							image.setGridOffset(ox, oy);
						elseif (sID == "gridright") then
							ox = ox + 1;
							image.setGridOffset(ox, oy);
						elseif (sID == "gridup") then
							oy = oy - 1;
							image.setGridOffset(ox, oy);
						elseif (sID == "griddown") then
							oy = oy + 1;
							image.setGridOffset(ox, oy);
						elseif (sID == "gridplus") then
							gridsize = gridsize + 1;
							image.setGridSize(gridsize);
						elseif (sID == "gridminus") then
							gridsize = gridsize - 1;
							image.setGridSize(gridsize);
						end
					end
				</script>
			</toolbar_30>
			<buttoncontrol name="toggle_grid">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<state icon="tool_grid_30" color="60A0A0A0" />
				<state icon="tool_grid_30" />
				<frame name="toolbar_30" />
				<tooltip textres="image_tooltip_toolbargrid" />
				<invisible />
				<script>
					function onValueChanged()
						window.parentcontrol.window.updateDisplay();
					end
				</script>
			</buttoncontrol>
			<genericcontrol name="h2">
				<anchored to="toolbar_anchor" width="5" height="34">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<invisible />
			</genericcontrol>
			<toolbar_30 name="toolbar_draw">
				<anchored to="toolbar_anchor">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<button>
					<id>unmask</id>
					<icon>tool_mask_30</icon>
					<tooltipres>image_tooltip_toolbarmask</tooltipres>
				</button>
				<button>
					<id>paint</id>
					<icon>tool_paint_30</icon>
					<tooltipres>image_tooltip_toolbardraw</tooltipres>
				</button>
				<button>
					<id>erase</id>
					<icon>tool_erase_30</icon>
					<tooltipres>image_tooltip_toolbarerase</tooltipres>
				</button>
				<toggle />
				<invisible />
				<script>
					function onValueChanged()
						local activelayer = window.parentcontrol.window.layerEnabled()
						local sTool = ""
						if activelayer == "play_image" then
							sTool = window.getImage().getCursorMode()
						elseif activelayer == "image" then
							sTool = window.parentcontrol.window.image.getCursorMode()
						end
						if sTool == "unmask" and activelayer == "image" then
							setActive("unmask")
						elseif sTool == "draw" and activelayer == "play_image" then
							setActive("paint")
						elseif sTool == "erase" and activelayer == "play_image" then
							setActive("erase")
						else
							setActive("")
						end
					end
					function onButtonPress(id)
						local activelayer = window.parentcontrol.window.layerEnabled()
						local image = ""
						if activelayer == "play_image" then
							image = window.getImage()
						elseif activelayer == "image" then
							image = window.parentcontrol.window.image
						end
						if id == "paint" and activelayer == "play_image" then
							if image.getCursorMode() ~= "draw" then
								image.setCursorMode("draw")
							else
								image.setCursorMode("")
							end
						elseif id == "erase" and activelayer == "play_image" then
							if image.getCursorMode() ~= "erase" then
								image.setCursorMode("erase")
							else
								image.setCursorMode("")
							end
						elseif id == "unmask" and activelayer == "image" then
							if image.getCursorMode() ~= "unmask" then
								image.setMaskEnabled(true)
								image.setCursorMode("unmask")
							else
								window.parentcontrol.window.showLayer("play")	
								window.toolbar_layers.setActive('layer_play');							
								image.setCursorMode("")
							end						
						elseif id == "unmask" and activelayer ~= "image" then
							window.parentcontrol.window.showLayer("background")
							window.toolbar_layers.setActive('layer_background');
							image = window.parentcontrol.window.image									 
							if image.getCursorMode() ~= "unmask" then
								image.setMaskEnabled(true)
								image.setCursorMode("unmask")
							else
								window.parentcontrol.window.showLayer("play")
								window.toolbar_layers.setActive('layer_play'); 
								image.setCursorMode("")
							end

						end

						onValueChanged()
					end
				</script>
			</toolbar_30>

			<!-- Layers section -->
			<genericcontrol name="h4" insertbefore="toolbar_draw">
				<anchored to="toolbar_anchor" width="5" height="34">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<invisible />
			</genericcontrol>
			<!-- Toggle play and background layer button -->
			<buttoncontrol name="toggle_layers_quick" insertbefore="toolbar_targeting">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<left anchor="left" relation="relative" />
				</anchored>
				<state icon="tool_layers_toggle_30" color="60A0A0A0" />
				<state icon="tool_layers_toggle_30" />
				<frame name="toolbar_30" />
				<tooltip textres="tooltip_toggle_layers_quick" />
				<invisible />
				<script>
					function onButtonPress()
						local activelayer = window.parentcontrol.window.layerEnabled();
						image = window.getImage()
						if activelayer == "play_image" then							
							window.toolbar_layers.setActive('layer_background');
							window.parentcontrol.window.showLayer("background")
							image.setCursorMode("")
						else
							window.toolbar_layers.setActive('layer_play');
							window.parentcontrol.window.showLayer("play")
							image.setCursorMode("")
						end
					end
				</script>
			</buttoncontrol>				
			<buttoncontrol name="toggle_layers" insertbefore="h4">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<state icon="tool_layers_30" color="60A0A0A0" />
				<state icon="tool_layers_30" />
				<frame name="toolbar_30" />
				<tooltip textres="image_tooltip_toolbargrid" />
				<invisible />
				<script>
					local showlayerbar = 0
					function getValue()
						return showlayerbar
					end
					function onButtonPress()
						if showlayerbar > 0 then
							showlayerbar = 0
						else
							showlayerbar = 1
						end
						window.parentcontrol.window.updateDisplay()
						window.toolbar_draw.onValueChanged()
					end
				</script>
			</buttoncontrol>
			<toolbar_30 name="toolbar_layers" insertbefore="h4">
				<anchored to="toolbar_anchor">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<invisible/>
				<button>
					<id>layer_background</id>
					<icon>tool_layers_background_30</icon>
					<tooltip>Background Layer</tooltip>
				</button>
				<button>
					<id>layer_features</id>
					<icon>tool_layers_features_30</icon>
					<tooltip>Features Layer</tooltip>
				</button>
				<button>
					<id>layer_play</id>
					<icon>tool_layers_play_30</icon>
					<tooltip>Play Layer</tooltip>
				</button>
				<toggle />
				<invisible />
				<script>
					function onInit()
						super.onInit()
						setActive("layer_play")
					end
					function onButtonPress(sID)
						if (sID == "layer_background") then
							setActive("layer_background")
							window.parentcontrol.window.showLayer("background")
						elseif (sID == "layer_features") then
							setActive("layer_features")
							window.parentcontrol.window.showLayer("features")
						elseif (sID == "layer_play") then
							setActive("layer_play")
							window.parentcontrol.window.showLayer("play")
						end
						window.toolbar_draw.onValueChanged()
					end
				</script>
			</toolbar_30>

			<!-- Clear saves button on toolbar -->
			<buttoncontrol name="toolbar_clear_saves" insertbefore="toolbar_targeting">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<invisible/>
				<state icon="tool_clear_saves_30" />
				<frame name="toolbar_30" />
				<tooltip textres="tooltip_saves_clear_toolbar" />
				<script>
					function onButtonPress()
						Debug.console("pressed save clear button!"); 
						local image = window.parentcontrol.window.play_image;
						local listTokens = image.getTokens(); 
						for _,token in pairs(listTokens) do
							local nodeCT = CombatManager.getCTFromToken(token);
							if nodeCT then
								TokenManager2.setSaveOverlay(nodeCT,0); 	
							end
						end
					end
					
					function updateDisplay()
					end
				</script>
			</buttoncontrol>

		</sheetdata>
	</windowclass>

</root>
